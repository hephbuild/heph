syntax = "proto3";
package heph.plugin.v1;

import "google/protobuf/struct.proto";
import "google/protobuf/any.proto";
import "google/protobuf/descriptor.proto";
import "heph/plugin/v1/plugin.proto";

message ParseRequest {
  TargetSpec spec = 1;
}

message ParseResponse {
  TargetDef target = 1;
}

message RunRequest {
  TargetDef target = 1;
  string sandbox_path = 2;
  repeated Artifact inputs = 3;
  repeated string pipes = 4;
}

message Artifact {
  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_OUTPUT = 1;
    TYPE_LOG = 2;
  }

  enum Encoding {
    ENCODING_UNSPECIFIED = 0;
    ENCODING_NONE = 1;
    ENCODING_TAR = 2;
    ENCODING_TAR_GZ = 3;
    ENCODING_BASE64 = 4;
  }

  string group = 1;
  string name = 2;
  Type type = 3;
  Encoding encoding = 4;
  string uri = 5;
}

message RunResponse {
  repeated Artifact artifacts = 1;
}

message ConfigRequest {}

message ConfigResponse {
  string name = 1;
  google.protobuf.DescriptorProto target_schema = 2;
}

message PipeRequest {}

message PipeResponse {
  string id = 1;
  string path = 2;
}

service Driver {
  rpc Config(ConfigRequest) returns (ConfigResponse) {}
  rpc Parse(ParseRequest) returns (ParseResponse) {}
  rpc Run(RunRequest) returns (RunResponse) {}
  rpc Pipe(PipeRequest) returns (PipeResponse) {}
}
