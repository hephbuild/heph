target(
    name="a",
    cache=False,
)
===
{
    "Name": "a",
    "Addr": "//some/test:a",
    "Package": {
        "Path": "some/test",
        "Root": {
            "Root": "/tmp/some/test",
            "RelRoot": "some/test",
            "Abs": ""
        },
        "SourceFiles": null
    },
    "Doc": "",
    "Run": null,
    "FileContent": "",
    "Entrypoint": "bash",
    "Platforms": [
        {
            "Labels": {
                "arch": "<ARCH>",
                "name": "local",
                "os": "<OS>"
            },
            "Options": null,
            "Default": true
        }
    ],
    "ConcurrentExecution": false,
    "Dir": "",
    "PassArgs": false,
    "Deps": {
        "Targets": null,
        "Files": null,
        "Exprs": null
    },
    "HashDeps": {
        "Targets": null,
        "Files": null,
        "Exprs": null
    },
    "DifferentHashDeps": false,
    "Tools": {
        "Targets": null,
        "Hosts": null,
        "Exprs": null
    },
    "Out": null,
    "Cache": {
        "Enabled": false,
        "Named": null,
        "History": 0
    },
    "RestoreCache": {
        "Enabled": false,
        "Key": "",
        "Paths": null,
        "Env": "rel_pkg"
    },
    "HasSupportFiles": false,
    "Sandbox": true,
    "OutInSandbox": false,
    "Codegen": "",
    "Labels": null,
    "Env": null,
    "PassEnv": null,
    "RuntimePassEnv": null,
    "RunInCwd": false,
    "Gen": false,
    "Source": null,
    "RuntimeEnv": null,
    "SrcEnv": {
        "Default": "rel_pkg",
        "Named": null
    },
    "OutEnv": "rel_pkg",
    "HashFile": "content",
    "Transitive": {
        "Deps": {
            "Targets": null,
            "Files": null,
            "Exprs": null
        },
        "Tools": {
            "Targets": null,
            "Hosts": null,
            "Exprs": null
        },
        "Env": null,
        "PassEnv": null,
        "RuntimePassEnv": null,
        "RuntimeEnv": null,
        "Platforms": null
    },
    "Timeout": 0,
    "GenDepsMeta": false
}